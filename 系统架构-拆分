

画一下你这个项目与哪些工程交互，它在你们的产品中处于什么样一个位置:


项目架构图(比较难的业务场景):



DBG
项目业务拆分:



日常项目中，如果你接手，你准备从哪些方面调优？
	1. 目标: 项目性能遭遇瓶颈或者猜测即将遭遇
	2. 快速增强: 扩容
	3. 调优: 系统调优和代码调优. 比如我们所提到的CDN、ehcache、redis等缓存技术，消息队列等等，加快服务间的响应速度，增加系统吞吐量，避免并发，至于代码调优，这些就需要多积累了，比如重构、工厂等， 数据库调优的话这个我不是很懂，只知道索引和存储过程，具体参考：Mysql数据库调优21个最佳实践  ，其他数据库调优方面就各位自己找找吧

对分布式的理解:分布式就是把一个系统/业务 拆分成多个子系统/子业务 去协同处理，这个过程就叫分布式
http://blog.csdn.net/binyao02123202/article/details/32340283/

描述一下当前的项目:

项目拆分:

项目架构:

系统设计:
	设计一个安全的对外接口:
		传输安全:
			1.数据加密:
				https协议数据加密
	                2.数据加签:
	                        数据加签
	                3.时间戳机制:
	                        时间戳机制, 防止拿到数据包进行恶意请求.
	        频次限制
	                4.AppId机制:
	                        AppId机制, 调用者在后台开通appid, 提供给用户相关的密钥;
	                        在调用的接口中需要提供appid+密钥, 服务器端会进行相关的验证;
	                5.限流机制:
	                        对接口访问频率设置一定阈值，对超过阈值的请求进行屏蔽及预警
	                        令牌桶和漏桶算法对指定appID的调用者限流
	        恶意请求:
	                6.黑名单机制:
	                7.数据合法性校验:
	                        数据合法性校验







系统设计题目:
	1. 实现前5分钟,1小时,24小时内分享最多
		1. LinkedList: 记录1,2,...n次的node, 每个node是一个list装载item
		2. HashMap: key:item, value:次数, 可以直接去linkedList找.
